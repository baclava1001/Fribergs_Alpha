@page "/admin/createuser"
@using Fribergs_Alpha.Data
@using Fribergs_Alpha.Models
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Policy = "AdminRoleRequired")]

@inject IUserRepository UserRepo


@if (Result != null)
{
    <span class="text-success">@Result</span>

    <NavLink class="nav-link" href="/admin/createuser">Create new user account</NavLink>
    <NavLink class="nav-link" href="/admin">Return</NavLink>
}


@if (ShowForm)
{
    <div class="row">
        <div class="col-md-auto align-baseline">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-person-add" viewBox="0 0 16 16">
                <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0m-2-6a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4" />
                <path d="M8.256 14a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1z" />
            </svg>
        </div>
        <div class="col">
            <h4>Create user account</h4>
        </div>
    </div>

    <hr />

    <div class="row">
        <div class="col-md-4">

            <EditForm Model="User" OnValidSubmit="CreateNewUser" FormName="CreateUser" Enhance>
             <DataAnnotationsValidator />

             <div class="mb-3">
                 <label class="form-label">
                     First name
                 </label>
                 <InputText @bind-Value="User.FirstName" placeholder="First name" class="form-control" />
                 <ValidationMessage For="() => User.FirstName" class="text-danger" />
             </div>
             <div class="mb-3">
                 <label class="form-label">
                     Last name
                 </label>
                 <InputText @bind-Value="User.LastName" placeholder="Last name" class="form-control" />
                 <ValidationMessage For="() => User.LastName" class="text-danger" />

             </div>
             <div class="mb-3">
                 <label class="form-label">
                     Adress
                 </label>
                 <InputText @bind-Value="User!.Address" placeholder="Adress" class="form-control" />
                 <ValidationMessage For="() => User.Address" class="text-danger" />

             </div>
             <div class="mb-3">
                 <label class="form-label">
                     Email
                 </label>
                 <InputText @bind-Value="User.Email" placeholder="Email" class="form-control" />
                 <ValidationMessage For="() => User.Email" class="text-danger" />

             </div>
             <div class="mb-3">
                 <label class="form-label">
                     Phone number
                 </label>
                 <InputText @bind-Value="User.PhoneNumber" placeholder="Phone number" class="form-control" />
                 <ValidationMessage For="() => User.PhoneNumber" class="text-danger" />

             </div>
             <div class="mb-3">
                 <label class="form-label">
                     Password
                 </label>
                 <InputText @bind-Value="User.Password" placeholder="password" class="form-control" />
                 <ValidationMessage For="() => User.Password" class="text-danger" />

             </div>
             <div class="mb-3 bg-danger p-1 text-center">
                 <InputCheckbox @bind-Value="User!.AdminRole" />
                 <label class="form-label">
                     Grant user administrator rights?
                 </label>
             </div>
             <br />
             <div>
                 <button type="submit" class="btn btn-primary">Create</button>
             </div>

         </EditForm>
     </div>
 </div>
}


@code {

    public string? Result { get; set; }

    public bool ShowForm { get; set; } = true;

    [SupplyParameterFromForm]
    public User? User { get; set; } = new User();


    public void CreateNewUser()
    {
        UserRepo.AddUser(User);
        Result = $"Successfully created customer {User.FirstName} {User.LastName}!";
        ShowForm = false;
        StateHasChanged();
    }
}
