@using Microsoft.AspNetCore.Components.QuickGrid
@page "/bookings/{listtype}"
@inject Fribergs_Alpha.Data.IBooking bookingRepository
@inject UserAuthService authService
@rendermode InteractiveServer
@attribute [Authorize]

<PageTitle>Bookings</PageTitle>





@* ADMIN/View all bookings *@

<AuthorizeView Context="authContext" Roles="Admin">

    @* ADMIN - currently active bookings *@

    @if (ListType == "present")
    {
        <h4>Active bookings</h4>
        <hr />

        <QuickGrid Class="table" Items="AllBookings!.Where(x => x.PickUpDate <= Today && x.ReturnDate >= Today)">
            <PropertyColumn Property="booking => booking.BookingId" Title="Booking ID" Sortable="true" />
            <PropertyColumn Property="booking => booking.User!.FirstName" Title="Firstname" Sortable="true" />
            <PropertyColumn Property="booking => booking.User!.LastName" Title="Lastname" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.CarId" Title="Car ID" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.Brand" Title="Brand" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.CarModel" Title="Model" Sortable="true" />
            <PropertyColumn Property="booking => booking.PickUpDate" Title="Pickup date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.ReturnDate" Title="Return date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.TotalSum" Title="Total cost" Sortable="true" />

            <TemplateColumn Context="booking">
                <a href="@($"bookings/edit?bookingid={booking.BookingId}")">Edit</a> |
                <a href="@($"bookings/details?bookingid={booking.BookingId}")">Details</a> |
                <a href="@($"bookings/delete?bookingid={booking.BookingId}")">Delete</a>
            </TemplateColumn>
        </QuickGrid>
    }

    @* ADMIN - upcoming bookings filtered by Booking.PickUpDate *@

    @if (ListType == "future")
    {
        <h4>Upcoming bookings</h4>

        <EditForm Model="DateFilter">
            <div class="row">
                <label>
                    Pickup date
                    <InputDate @bind-Value="DateFilter.FilterStartDate" />
                </label>
            </div>
            <div class="row">
                <label>
                    Return date
                    <InputDate @bind-Value="DateFilter.FilterEndDate" />
                </label>
            </div>
        </EditForm>

        <hr />

        <QuickGrid Class="table" Items="AllBookings!.Where(x => (x.PickUpDate >= DateFilter.FilterStartDate) &&
                                                                (x.ReturnDate <= DateFilter.FilterEndDate) &&
                                                                (x.PickUpDate >= Today))">

            <PropertyColumn Property="booking => booking.BookingId" Title="Booking ID" Sortable="true" />
            <PropertyColumn Property="booking => booking.User!.FirstName" Title="Firstname" Sortable="true" />
            <PropertyColumn Property="booking => booking.User!.LastName" Title="Lastname" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.CarId" Title="Car ID" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.Brand" Title="Brand" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.CarModel" Title="Model" Sortable="true" />
            <PropertyColumn Property="booking => booking.PickUpDate" Title="Pickup date" Format="yyy-MM-dd" Sortable="true"
                            IsDefaultSortColumn="true" InitialSortDirection="SortDirection.Ascending" />
            <PropertyColumn Property="booking => booking.ReturnDate" Title="Return date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.TotalSum" Title="Total cost" Sortable="true" />

            <TemplateColumn Context="booking">
                <a href="@($"bookings/edit?bookingid={booking.BookingId}")">Edit</a> |
                <a href="@($"bookings/details?bookingid={booking.BookingId}")">Details</a> |
                <a href="@($"bookings/delete?bookingid={booking.BookingId}")">Delete</a>
            </TemplateColumn>
        </QuickGrid>
    }

    @* ADMIN - historical bookings *@

    @if (ListType == "past")
    {
        <h4>Historical bookings</h4>
        <hr />

        <QuickGrid Class="table" Items="AllBookings!.Where(x => x.PickUpDate < Today)">
            <PropertyColumn Property="booking => booking.BookingId" Title="Booking ID" Sortable="true" />
            <PropertyColumn Property="booking => booking.User!.FirstName" Title="Firstname" Sortable="true" />
            <PropertyColumn Property="booking => booking.User!.LastName" Title="Lastname" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.CarId" Title="Car ID" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.Brand" Title="Brand" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.CarModel" Title="Model" Sortable="true" />
            <PropertyColumn Property="booking => booking.PickUpDate" Title="Pickup date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.ReturnDate" Title="Return date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.TotalSum" Title="Total cost" Sortable="true" />

            <TemplateColumn Context="booking">
                <a href="@($"bookings/edit?bookingid={booking.BookingId}")">Edit</a> |
                <a href="@($"bookings/details?bookingid={booking.BookingId}")">Details</a> |
                <a href="@($"bookings/delete?bookingid={booking.BookingId}")">Delete</a>
            </TemplateColumn>
        </QuickGrid>
    }


</AuthorizeView>


@* Logged in customer bookings *@

<AuthorizeView Roles="Customer">

    @* CUSTOMER - currently active bookings *@

    @if (ListType == "all")
    {
        <h4>Active bookings</h4>
        <hr />

        <QuickGrid Class="table" Items="AllBookingsByUser!.Where(x => x.PickUpDate <= Today && x.ReturnDate >= Today)">
            <PropertyColumn Property="booking => booking.BookingId" Title="Booking ID" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.Brand" Title="Brand" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.CarModel" Title="Model" Sortable="true" />
            <PropertyColumn Property="booking => booking.PickUpDate" Title="Pickup date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.ReturnDate" Title="Return date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.TotalSum" Title="Total cost" Sortable="true" />

            <TemplateColumn Context="booking">
                <a href="@($"bookings/edit?bookingid={booking.BookingId}")">Edit</a> |
                <a href="@($"bookings/details?bookingid={booking.BookingId}")">Details</a> |
            </TemplateColumn>
        </QuickGrid>


        @* CUSTOMER - upcoming bookings *@

        <h4>Upcoming bookings</h4>
        <hr />

        <QuickGrid Class="table" Items="AllBookingsByUser!.Where(x => x.PickUpDate > Today)">
            <PropertyColumn Property="booking => booking.BookingId" Title="Booking ID" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.Brand" Title="Brand" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.CarModel" Title="Model" Sortable="true" />
            <PropertyColumn Property="booking => booking.PickUpDate" Title="Pickup date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.ReturnDate" Title="Return date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.TotalSum" Title="Total cost" Sortable="true" />

            <TemplateColumn Context="booking">
                <a href="@($"bookings/edit?bookingid={booking.BookingId}")">Edit</a> |
                <a href="@($"bookings/details?bookingid={booking.BookingId}")">Details</a> |
                <a href="@($"bookings/delete?bookingid={booking.BookingId}")">Delete</a>
            </TemplateColumn>
        </QuickGrid>


        @* CUSTOMER - historical bookings *@

        <h4>Historical bookings</h4>
        <hr />

        <QuickGrid Class="table" Items="AllBookingsByUser!.Where(x => x.ReturnDate < Today)">
            <PropertyColumn Property="booking => booking.BookingId" Title="Booking ID" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.Brand" Title="Brand" Sortable="true" />
            <PropertyColumn Property="booking => booking.Car!.CarModel" Title="Model" Sortable="true" />
            <PropertyColumn Property="booking => booking.PickUpDate" Title="Pickup date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.ReturnDate" Title="Return date" Format="yyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="booking => booking.TotalSum" Title="Total cost" Sortable="true" />

            <TemplateColumn Context="booking">
                <a href="@($"bookings/details?bookingid={booking.BookingId}")">Details</a> |
            </TemplateColumn>
        </QuickGrid>
    }


</AuthorizeView>


@code {

    [Parameter]
    public string ListType { get; set; }

    [SupplyParameterFromForm]
    public DateFilter DateFilter { get; set; } = new DateFilter();

    public DateTime Today { get; set; } = DateTime.Now.Date;

    public IQueryable<Booking>? AllBookings { get; set; }

    public IQueryable<Booking>? AllBookingsByUser { get; set; }

    public int UserId { get; set; }

    public string? Role { get; set; }



    protected override void OnInitialized()
    {
        Role = authService.GetUserRoleAsync().Result;
        UserId = authService.GetUserIdAsync().Result;

        if (Role == "Admin" && AllBookings == null)
        {
            AllBookings = bookingRepository.GetAllBookings().AsQueryable();
        }

        if (Role == "Customer" && AllBookingsByUser == null)
        {
            AllBookingsByUser = bookingRepository.GetAllBookingsByUser(UserId).AsQueryable();
        }
    }
}