@page "/bookings/details"
@inject Fribergs_Alpha.Data.IBooking bookingRepository
@using Fribergs_Alpha.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Booking</h4>
    <hr />
    @if (booking is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl>
            <img src="@booking.Car.CarPicUrl" alt="" class="img-thumbnail" />
            <dd class="col-sm-2">@booking.Car.Brand @booking.Car.CarModel (@booking.Car.Year)</dd>
            <dt class="col-sm-2">Booked by:</dt>
            <dd class="col-sm-10">@booking.User.FirstName @booking.User.LastName</dd>
            <dt class="col-sm-2">Pickup Date:</dt>
            <dd class="col-sm-10">@booking.PickUpDate</dd>
            <dt class="col-sm-2">Return Date:</dt>
            <dd class="col-sm-10">@booking.ReturnDate</dd>
            <dt class="col-sm-2">Total sum:</dt>
            <dd class="col-sm-10">@booking.TotalSum</dd>
        </dl>
        <div>
            <a href="@($"/bookings/edit?bookingid={booking.BookingId}")">Edit</a> |
            <a href="@($"/bookings/all")">Back to List</a>
        </div>
    }
</div>

@code {
    Booking? booking;

    [SupplyParameterFromQuery]
    public int BookingId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        booking = bookingRepository.GetBookingById(BookingId);

        if (booking is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
