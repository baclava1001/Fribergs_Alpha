@page "/user/delete"
@using Fribergs_Alpha.Data
@using Fribergs_Alpha.Models
@using Microsoft.EntityFrameworkCore
@inject IUserRepository UserRepository
@inject UserAuthService authService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Delete</PageTitle>

<h3>Delete user account?</h3>
<div>
    <h4>ID: @user.UserId Name: @user.FirstName @user.LastName</h4>
    <hr />
    @if (user is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FirstName</dt>
            <dd class="col-sm-10">@user.FirstName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@user.LastName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@user.Address</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@user.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PhoneNumber</dt>
            <dd class="col-sm-10">@user.PhoneNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Password</dt>
            <dd class="col-sm-10">@user.Password</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AdminRole</dt>
            <dd class="col-sm-10">@user.AdminRole</dd>
        </dl>
        <EditForm method="post" Model="user" OnValidSubmit="DeleteUser" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(user is null)">Delete</button> |
            <AuthorizeView Policy="CustomerRoleRequired">
                <Authorized Context="authContext">
                    <a href="/customer">Back</a> |
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Policy="AdminRoleRequired">
                <Authorized Context="authContext">
                    <a href="/admin">Cancel</a>
                </Authorized>
            </AuthorizeView>
        </EditForm>
    }
</div>

@code {
    User? user;

    [SupplyParameterFromQuery]
    public int UserId { get; set; }

    protected override void OnInitialized()
    {
        user = UserRepository.GetUserById(UserId);

        if (user is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public void DeleteUser()
    {
        if (user != null)
        {
            // If user is a customer
            if (!user.AdminRole)
            {
                // Delete and redirect to customer list
                UserRepository.DeleteUser(UserId!);
                NavigationManager.NavigateTo("/userpages/users/customer");
            }
            // If the user (customer or admin) is deleting their own account
            else if (user.UserId == authService.GetUserIdAsync().Result)
            {
                // Delete and logout
                UserRepository.DeleteUser(UserId!);
                NavigationManager.NavigateTo("/logout");
            }
            else // If user is admin and not deleting their own account
            {
                // Delete and redirect to admin list
                UserRepository.DeleteUser(UserId!);
                NavigationManager.NavigateTo("/userpages/users/admin");
            }
        }        
    }
}
