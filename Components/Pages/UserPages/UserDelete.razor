@page "/users/delete"
@inject IUserRepository UserRepository
@using Fribergs_Alpha.Data
@using Fribergs_Alpha.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>User</h4>
    <hr />
    @if (user is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FirstName</dt>
            <dd class="col-sm-10">@user.FirstName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@user.LastName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@user.Address</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@user.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PhoneNumber</dt>
            <dd class="col-sm-10">@user.PhoneNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Password</dt>
            <dd class="col-sm-10">@user.Password</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AdminRole</dt>
            <dd class="col-sm-10">@user.AdminRole</dd>
        </dl>
        <EditForm method="post" Model="user" OnValidSubmit="DeleteUser" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(user is null)">Delete</button> |
            <a href="/users">Back to List</a>
        </EditForm>
    }
</div>

@code {
    User? user;

    [SupplyParameterFromQuery]
    public int UserId { get; set; }

    protected override void OnInitialized()
    {
        user = UserRepository.GetUserById(UserId);

        if (user is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public void DeleteUser()
    {
        if (user != null)
        {
            UserRepository.DeleteUser(UserId!);
            NavigationManager.NavigateTo("/userpages/users/Customer");
        }
        // DB.Users.Remove(user!);
        // await DB.SaveChangesAsync();
        
    }
}
