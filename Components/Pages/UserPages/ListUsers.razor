@page "/userpages/users/{role}"
@using Fribergs_Alpha.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@using Fribergs_Alpha.Data
@rendermode InteractiveServer
@inject IUserRepository UserRepo
@attribute [Authorize(Policy = "AdminRoleRequired")]



<h3>@Role accounts</h3>

<p>
    <a href="userpages/createuser">Create new account</a>
</p>


<QuickGrid Class="table" Items="Users">
    <PropertyColumn Property="user => user.UserId" Title="ID" Sortable="true" IsDefaultSortColumn="true" InitialSortDirection="SortDirection.Ascending" />
    <PropertyColumn Property="user => user.FirstName" Title="First name" Sortable="true" />
    <PropertyColumn Property="user => user.LastName" Title="Last name" Sortable="true" />
    <PropertyColumn Property="user => user.Email" Title="Email" Sortable="true" />
    <PropertyColumn Property="user => user.Address" Title="Adress" Sortable="true" />
    <PropertyColumn Property="user => user.PhoneNumber" Title="Phone number" Sortable="true" />


    <TemplateColumn Context="user" Title="Handle">
        <a href="@($"/userpages/edituser?userid={user.UserId}")">Edit</a> |
        <a href="@($"/users/delete?userid={user.UserId}")">Delete</a>
    </TemplateColumn>
</QuickGrid>


@code {
    [Parameter]
    public string? Role { get; set; }

    IQueryable<User>? Users = null;

    protected override void OnInitialized()
    {
        if (Role == "Customer")
        {
            Users = UserRepo.GetAllCustomers().AsQueryable();
        }
        else if (Role == "Admin")
        {
            Users = UserRepo.GetAllAdmins().AsQueryable();
        }
    }
}
